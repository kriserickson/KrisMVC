<?php


require(dirname(__FILE__) . '/StoreItemTest.php');

/**
 * Test class for KrisModel.
 * Generated by PHPUnit on 2011-06-27 at 23:07:16.
 */
class KrisModelTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var KrisModel
     */
    protected $object;

    /**
     * @test
     */
    public function testModelRetrieveOne()
    {
        $sql = 'SELECT `store_id`, `name`, `description`, `price`, `image`, `multiple` FROM store WHERE `store_id` = ?';
        $store_id = 12;
        $name = '$20 Gift Certificate';
        $description = 'Good for $20 towards any class or workshop at Ammara Dance Studio. ';
        $price = 20;
        $image = 'cert20.jpg';
        $multiple = 1;

        $PDOMock = $this->getMock('MockPDO', array('prepare'), array(), '', false);
        $stmtMock = $this->getMock('PDOStatement', array('execute', 'errorCode', 'fetch'));

        $PDOMock->expects($this->once())->method('prepare')->with($sql)->will($this->returnValue($stmtMock));

        $stmtMock->expects($this->once())->method('execute')->with(array($store_id));
        $stmtMock->expects($this->once())->method('errorCode')->will($this->returnValue(0));
        $stmtMock->expects($this->once())->method('fetch')->with(PDO::FETCH_ASSOC)->will($this->returnValue(array(
            'store_id' => $store_id, 'name' => $name, 'description' => $description, 'price' => $price,
            'image' => $image, 'multiple' => $multiple)));

        $modelMock = $this->getMock('StoreItemTest', array('getDatabaseHandle'));


        $modelMock->expects($this->once())->method('getDatabaseHandle')->will($this->returnValue($PDOMock));

        /** @var $modelMock StoreItem */
        $modelMock->retrieve($store_id);
        $this->assertEquals($name, $modelMock->Name);
        $this->assertEquals($description, $modelMock->Description);
        $this->assertEquals($price, $modelMock->Price);
        $this->assertEquals($image, $modelMock->Image);
        $this->assertEquals($multiple, $modelMock->Multiple);
    }
}
?>
